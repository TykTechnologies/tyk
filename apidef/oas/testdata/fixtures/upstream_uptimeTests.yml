---
name: "Upstream uptime tests"
tests:
  - desc: "unset oas uptime tests"
    source: oas
    input:
      x-tyk-api-gateway:
        upstream: {}
    output:
      proxy:
        check_host_against_uptime_tests: false
  - desc: "upstream uptime test oas"
    source: oas
    input:
      x-tyk-api-gateway:
        upstream:
          uptimeTests:
            enabled: true
            hostDownRetestPeriod: 20s
            logRetentionPeriod: 10s
            tests:
            - url: "https://www.google.com"
              protocol: "http"
              timeout: 1s
              method: "GET"
              enableProxyProtocol: true
              headers:
                "Content-Type": "application/json"
              body: "test"
    output:
      proxy.check_host_against_uptime_tests: true
      uptime_tests.config.expire_utime_after: 10
      uptime_tests.config.recheck_wait: 20
      uptime_tests:
        check_list:
          - url: "https://www.google.com"
            protocol: "http"
            timeout: 1000000000
            method: "GET"
            headers.Content-Type: "application/json"
            body: "test"
            enable_proxy_protocol: true
      serviceDiscovery: <nil>
  - desc: "upstream uptime test classic"
    source: classic
    input:
      proxy:
        check_host_against_uptime_tests: true
      uptime_tests:
        config:
          expire_utime_after: 10
          recheck_wait: 20
        check_list:
          - url: "https://www.google.com"
            protocol: "http"
            timeout: 2000000
            method: "GET"
            headers:
              "Content-Type": "application/json"
    output:
      x-tyk-api-gateway:
        upstream:
          serviceDiscovery: <nil>
          uptimeTests:
            enabled: true
            hostDownRetestPeriod: 20s
            logRetentionPeriod: 10s
            tests:
            - url: "https://www.google.com"
              protocol: "http"
              timeout: 2ms
              method: "GET"
              headers:
                "Content-Type": "application/json"
  - desc: "upstream uptime test classic"
    source: classic
    input:
      proxy:
        check_host_against_uptime_tests: false
      uptime_tests:
        config:
          expire_utime_after: 10
          recheck_wait: 20
        check_list:
          - url: "https://www.google.com"
            protocol: "http"
            timeout: 2000000000
            method: "GET"
            enable_proxy_protocol: true
            headers:
              "Content-Type": "application/json"
    output:
      x-tyk-api-gateway:
        upstream:
          serviceDiscovery: <nil>
          uptimeTests:
            enabled: false
            hostDownRetestPeriod: 20s
            logRetentionPeriod: 10s
            tests:
            - url: "https://www.google.com"
              protocol: "http"
              timeout: 2s
              method: "GET"
              enableProxyProtocol: true
              headers:
                "Content-Type": "application/json"
  - desc: "upstream uptime test classic - commands"
    source: classic
    input:
      proxy:
        check_host_against_uptime_tests: false
      uptime_tests:
        config:
          expire_utime_after: 10
          recheck_wait: 20
        check_list:
          - url: "https://www.google.com"
            protocol: "http"
            timeout: 2000000000
            method: "GET"
            enable_proxy_protocol: true
            headers:
              "Content-Type": "application/json"
            commands:
            - name: send
              message: "test"
            - name: expect
              message: "test2"
    output:
      x-tyk-api-gateway:
        upstream:
          serviceDiscovery: <nil>
          uptimeTests:
            enabled: false
            hostDownRetestPeriod: 20s
            logRetentionPeriod: 10s
            tests:
            - url: "https://www.google.com"
              protocol: "http"
              timeout: 2s
              method: "GET"
              enableProxyProtocol: true
              headers:
                "Content-Type": "application/json"
              commands:
              - name: send
                message: "test"
              - name: expect
                message: "test2"

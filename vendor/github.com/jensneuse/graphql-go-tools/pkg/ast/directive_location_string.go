// Code generated by "stringer -type=DirectiveLocation"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DirectiveLocationUnknown-0]
	_ = x[ExecutableDirectiveLocationQuery-1]
	_ = x[ExecutableDirectiveLocationMutation-2]
	_ = x[ExecutableDirectiveLocationSubscription-3]
	_ = x[ExecutableDirectiveLocationField-4]
	_ = x[ExecutableDirectiveLocationFragmentDefinition-5]
	_ = x[ExecutableDirectiveLocationFragmentSpread-6]
	_ = x[ExecutableDirectiveLocationInlineFragment-7]
	_ = x[ExecutableDirectiveLocationVariableDefinition-8]
	_ = x[TypeSystemDirectiveLocationSchema-9]
	_ = x[TypeSystemDirectiveLocationScalar-10]
	_ = x[TypeSystemDirectiveLocationObject-11]
	_ = x[TypeSystemDirectiveLocationFieldDefinition-12]
	_ = x[TypeSystemDirectiveLocationArgumentDefinition-13]
	_ = x[TypeSystemDirectiveLocationInterface-14]
	_ = x[TypeSystemDirectiveLocationUnion-15]
	_ = x[TypeSystemDirectiveLocationEnum-16]
	_ = x[TypeSystemDirectiveLocationEnumValue-17]
	_ = x[TypeSystemDirectiveLocationInputObject-18]
	_ = x[TypeSystemDirectiveLocationInputFieldDefinition-19]
}

const _DirectiveLocation_name = "DirectiveLocationUnknownExecutableDirectiveLocationQueryExecutableDirectiveLocationMutationExecutableDirectiveLocationSubscriptionExecutableDirectiveLocationFieldExecutableDirectiveLocationFragmentDefinitionExecutableDirectiveLocationFragmentSpreadExecutableDirectiveLocationInlineFragmentExecutableDirectiveLocationVariableDefinitionTypeSystemDirectiveLocationSchemaTypeSystemDirectiveLocationScalarTypeSystemDirectiveLocationObjectTypeSystemDirectiveLocationFieldDefinitionTypeSystemDirectiveLocationArgumentDefinitionTypeSystemDirectiveLocationInterfaceTypeSystemDirectiveLocationUnionTypeSystemDirectiveLocationEnumTypeSystemDirectiveLocationEnumValueTypeSystemDirectiveLocationInputObjectTypeSystemDirectiveLocationInputFieldDefinition"

var _DirectiveLocation_index = [...]uint16{0, 24, 56, 91, 130, 162, 207, 248, 289, 334, 367, 400, 433, 475, 520, 556, 588, 619, 655, 693, 740}

func (d DirectiveLocation) String() string {
	if d < 0 || d >= DirectiveLocation(len(_DirectiveLocation_index)-1) {
		return "DirectiveLocation(" + strconv.FormatInt(int64(d), 10) + ")"
	}
	return _DirectiveLocation_name[_DirectiveLocation_index[d]:_DirectiveLocation_index[d+1]]
}

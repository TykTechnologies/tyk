// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coprocess_object.proto

package coprocess;

public final class CoprocessObject {
  private CoprocessObject() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:coprocess.Object)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .coprocess.HookType hook_type = 1;</code>
     */
    int getHookTypeValue();
    /**
     * <code>optional .coprocess.HookType hook_type = 1;</code>
     */
    coprocess.CoprocessCommon.HookType getHookType();

    /**
     * <code>optional string hook_name = 2;</code>
     */
    java.lang.String getHookName();
    /**
     * <code>optional string hook_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getHookNameBytes();

    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    coprocess.CoprocessMiniRequestObject.MiniRequestObject getRequest();
    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    boolean hasSession();
    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    coprocess.CoprocessSessionState.SessionState getSession();
    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    coprocess.CoprocessSessionState.SessionStateOrBuilder getSessionOrBuilder();

    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    int getMetadataCount();
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    boolean containsMetadata(
        java.lang.String key);
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetadata();
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetadataMap();
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    java.lang.String getMetadataOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */
    int getSpecCount();
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */
    boolean containsSpec(
        java.lang.String key);
    /**
     * Use {@link #getSpecMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getSpec();
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getSpecMap();
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    java.lang.String getSpecOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    java.lang.String getSpecOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code coprocess.Object}
   */
  public  static final class Object extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:coprocess.Object)
      ObjectOrBuilder {
    // Use Object.newBuilder() to construct.
    private Object(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Object() {
      hookType_ = 0;
      hookName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Object(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              hookType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              hookName_ = s;
              break;
            }
            case 26: {
              coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder subBuilder = null;
              if (request_ != null) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(coprocess.CoprocessMiniRequestObject.MiniRequestObject.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              coprocess.CoprocessSessionState.SessionState.Builder subBuilder = null;
              if (session_ != null) {
                subBuilder = session_.toBuilder();
              }
              session_ = input.readMessage(coprocess.CoprocessSessionState.SessionState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(session_);
                session_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                metadata_ = com.google.protobuf.MapField.newMapField(
                    MetadataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metadata_.getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                spec_ = com.google.protobuf.MapField.newMapField(
                    SpecDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              spec__ = input.readMessage(
                  SpecDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              spec_.getMutableMap().put(
                  spec__.getKey(), spec__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coprocess.CoprocessObject.internal_static_coprocess_Object_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMetadata();
        case 6:
          return internalGetSpec();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coprocess.CoprocessObject.internal_static_coprocess_Object_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coprocess.CoprocessObject.Object.class, coprocess.CoprocessObject.Object.Builder.class);
    }

    private int bitField0_;
    public static final int HOOK_TYPE_FIELD_NUMBER = 1;
    private int hookType_;
    /**
     * <code>optional .coprocess.HookType hook_type = 1;</code>
     */
    public int getHookTypeValue() {
      return hookType_;
    }
    /**
     * <code>optional .coprocess.HookType hook_type = 1;</code>
     */
    public coprocess.CoprocessCommon.HookType getHookType() {
      coprocess.CoprocessCommon.HookType result = coprocess.CoprocessCommon.HookType.valueOf(hookType_);
      return result == null ? coprocess.CoprocessCommon.HookType.UNRECOGNIZED : result;
    }

    public static final int HOOK_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object hookName_;
    /**
     * <code>optional string hook_name = 2;</code>
     */
    public java.lang.String getHookName() {
      java.lang.Object ref = hookName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hookName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string hook_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getHookNameBytes() {
      java.lang.Object ref = hookName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hookName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private coprocess.CoprocessMiniRequestObject.MiniRequestObject request_;
    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    public coprocess.CoprocessMiniRequestObject.MiniRequestObject getRequest() {
      return request_ == null ? coprocess.CoprocessMiniRequestObject.MiniRequestObject.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .coprocess.MiniRequestObject request = 3;</code>
     */
    public coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder getRequestOrBuilder() {
      return getRequest();
    }

    public static final int SESSION_FIELD_NUMBER = 4;
    private coprocess.CoprocessSessionState.SessionState session_;
    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    public boolean hasSession() {
      return session_ != null;
    }
    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    public coprocess.CoprocessSessionState.SessionState getSession() {
      return session_ == null ? coprocess.CoprocessSessionState.SessionState.getDefaultInstance() : session_;
    }
    /**
     * <code>optional .coprocess.SessionState session = 4;</code>
     */
    public coprocess.CoprocessSessionState.SessionStateOrBuilder getSessionOrBuilder() {
      return getSession();
    }

    public static final int METADATA_FIELD_NUMBER = 5;
    private static final class MetadataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  coprocess.CoprocessObject.internal_static_coprocess_Object_MetadataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metadata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }

    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    public boolean containsMetadata(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    public java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */

    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SPEC_FIELD_NUMBER = 6;
    private static final class SpecDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  coprocess.CoprocessObject.internal_static_coprocess_Object_SpecEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> spec_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetSpec() {
      if (spec_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SpecDefaultEntryHolder.defaultEntry);
      }
      return spec_;
    }

    public int getSpecCount() {
      return internalGetSpec().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    public boolean containsSpec(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetSpec().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSpecMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSpec() {
      return getSpecMap();
    }
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getSpecMap() {
      return internalGetSpec().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    public java.lang.String getSpecOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSpec().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; spec = 6;</code>
     */

    public java.lang.String getSpecOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSpec().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hookType_ != coprocess.CoprocessCommon.HookType.Unknown.getNumber()) {
        output.writeEnum(1, hookType_);
      }
      if (!getHookNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hookName_);
      }
      if (request_ != null) {
        output.writeMessage(3, getRequest());
      }
      if (session_ != null) {
        output.writeMessage(4, getSession());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetadata(),
          MetadataDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSpec(),
          SpecDefaultEntryHolder.defaultEntry,
          6);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hookType_ != coprocess.CoprocessCommon.HookType.Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, hookType_);
      }
      if (!getHookNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hookName_);
      }
      if (request_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (session_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSession());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetadata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, metadata__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetSpec().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        spec__ = SpecDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, spec__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coprocess.CoprocessObject.Object)) {
        return super.equals(obj);
      }
      coprocess.CoprocessObject.Object other = (coprocess.CoprocessObject.Object) obj;

      boolean result = true;
      result = result && hookType_ == other.hookType_;
      result = result && getHookName()
          .equals(other.getHookName());
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasSession() == other.hasSession());
      if (hasSession()) {
        result = result && getSession()
            .equals(other.getSession());
      }
      result = result && internalGetMetadata().equals(
          other.internalGetMetadata());
      result = result && internalGetSpec().equals(
          other.internalGetSpec());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + HOOK_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + hookType_;
      hash = (37 * hash) + HOOK_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getHookName().hashCode();
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasSession()) {
        hash = (37 * hash) + SESSION_FIELD_NUMBER;
        hash = (53 * hash) + getSession().hashCode();
      }
      if (!internalGetMetadata().getMap().isEmpty()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetadata().hashCode();
      }
      if (!internalGetSpec().getMap().isEmpty()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSpec().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coprocess.CoprocessObject.Object parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.Object parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Object parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.Object parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Object parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Object parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Object parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Object parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Object parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Object parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coprocess.CoprocessObject.Object prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coprocess.Object}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:coprocess.Object)
        coprocess.CoprocessObject.ObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coprocess.CoprocessObject.internal_static_coprocess_Object_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMetadata();
          case 6:
            return internalGetSpec();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableMetadata();
          case 6:
            return internalGetMutableSpec();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coprocess.CoprocessObject.internal_static_coprocess_Object_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coprocess.CoprocessObject.Object.class, coprocess.CoprocessObject.Object.Builder.class);
      }

      // Construct using coprocess.CoprocessObject.Object.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hookType_ = 0;

        hookName_ = "";

        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          request_ = null;
          requestBuilder_ = null;
        }
        if (sessionBuilder_ == null) {
          session_ = null;
        } else {
          session_ = null;
          sessionBuilder_ = null;
        }
        internalGetMutableMetadata().clear();
        internalGetMutableSpec().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coprocess.CoprocessObject.internal_static_coprocess_Object_descriptor;
      }

      public coprocess.CoprocessObject.Object getDefaultInstanceForType() {
        return coprocess.CoprocessObject.Object.getDefaultInstance();
      }

      public coprocess.CoprocessObject.Object build() {
        coprocess.CoprocessObject.Object result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coprocess.CoprocessObject.Object buildPartial() {
        coprocess.CoprocessObject.Object result = new coprocess.CoprocessObject.Object(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.hookType_ = hookType_;
        result.hookName_ = hookName_;
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (sessionBuilder_ == null) {
          result.session_ = session_;
        } else {
          result.session_ = sessionBuilder_.build();
        }
        result.metadata_ = internalGetMetadata();
        result.metadata_.makeImmutable();
        result.spec_ = internalGetSpec();
        result.spec_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coprocess.CoprocessObject.Object) {
          return mergeFrom((coprocess.CoprocessObject.Object)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coprocess.CoprocessObject.Object other) {
        if (other == coprocess.CoprocessObject.Object.getDefaultInstance()) return this;
        if (other.hookType_ != 0) {
          setHookTypeValue(other.getHookTypeValue());
        }
        if (!other.getHookName().isEmpty()) {
          hookName_ = other.hookName_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasSession()) {
          mergeSession(other.getSession());
        }
        internalGetMutableMetadata().mergeFrom(
            other.internalGetMetadata());
        internalGetMutableSpec().mergeFrom(
            other.internalGetSpec());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coprocess.CoprocessObject.Object parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coprocess.CoprocessObject.Object) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int hookType_ = 0;
      /**
       * <code>optional .coprocess.HookType hook_type = 1;</code>
       */
      public int getHookTypeValue() {
        return hookType_;
      }
      /**
       * <code>optional .coprocess.HookType hook_type = 1;</code>
       */
      public Builder setHookTypeValue(int value) {
        hookType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .coprocess.HookType hook_type = 1;</code>
       */
      public coprocess.CoprocessCommon.HookType getHookType() {
        coprocess.CoprocessCommon.HookType result = coprocess.CoprocessCommon.HookType.valueOf(hookType_);
        return result == null ? coprocess.CoprocessCommon.HookType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .coprocess.HookType hook_type = 1;</code>
       */
      public Builder setHookType(coprocess.CoprocessCommon.HookType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hookType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .coprocess.HookType hook_type = 1;</code>
       */
      public Builder clearHookType() {
        
        hookType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hookName_ = "";
      /**
       * <code>optional string hook_name = 2;</code>
       */
      public java.lang.String getHookName() {
        java.lang.Object ref = hookName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hookName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hook_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHookNameBytes() {
        java.lang.Object ref = hookName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hookName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hook_name = 2;</code>
       */
      public Builder setHookName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hookName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hook_name = 2;</code>
       */
      public Builder clearHookName() {
        
        hookName_ = getDefaultInstance().getHookName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hook_name = 2;</code>
       */
      public Builder setHookNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hookName_ = value;
        onChanged();
        return this;
      }

      private coprocess.CoprocessMiniRequestObject.MiniRequestObject request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coprocess.CoprocessMiniRequestObject.MiniRequestObject, coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder, coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder> requestBuilder_;
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public boolean hasRequest() {
        return requestBuilder_ != null || request_ != null;
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public coprocess.CoprocessMiniRequestObject.MiniRequestObject getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? coprocess.CoprocessMiniRequestObject.MiniRequestObject.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public Builder setRequest(coprocess.CoprocessMiniRequestObject.MiniRequestObject value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public Builder setRequest(
          coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public Builder mergeRequest(coprocess.CoprocessMiniRequestObject.MiniRequestObject value) {
        if (requestBuilder_ == null) {
          if (request_ != null) {
            request_ =
              coprocess.CoprocessMiniRequestObject.MiniRequestObject.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          request_ = null;
          requestBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder getRequestBuilder() {
        
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      public coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              coprocess.CoprocessMiniRequestObject.MiniRequestObject.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .coprocess.MiniRequestObject request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coprocess.CoprocessMiniRequestObject.MiniRequestObject, coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder, coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coprocess.CoprocessMiniRequestObject.MiniRequestObject, coprocess.CoprocessMiniRequestObject.MiniRequestObject.Builder, coprocess.CoprocessMiniRequestObject.MiniRequestObjectOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private coprocess.CoprocessSessionState.SessionState session_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coprocess.CoprocessSessionState.SessionState, coprocess.CoprocessSessionState.SessionState.Builder, coprocess.CoprocessSessionState.SessionStateOrBuilder> sessionBuilder_;
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public boolean hasSession() {
        return sessionBuilder_ != null || session_ != null;
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public coprocess.CoprocessSessionState.SessionState getSession() {
        if (sessionBuilder_ == null) {
          return session_ == null ? coprocess.CoprocessSessionState.SessionState.getDefaultInstance() : session_;
        } else {
          return sessionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public Builder setSession(coprocess.CoprocessSessionState.SessionState value) {
        if (sessionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          session_ = value;
          onChanged();
        } else {
          sessionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public Builder setSession(
          coprocess.CoprocessSessionState.SessionState.Builder builderForValue) {
        if (sessionBuilder_ == null) {
          session_ = builderForValue.build();
          onChanged();
        } else {
          sessionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public Builder mergeSession(coprocess.CoprocessSessionState.SessionState value) {
        if (sessionBuilder_ == null) {
          if (session_ != null) {
            session_ =
              coprocess.CoprocessSessionState.SessionState.newBuilder(session_).mergeFrom(value).buildPartial();
          } else {
            session_ = value;
          }
          onChanged();
        } else {
          sessionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public Builder clearSession() {
        if (sessionBuilder_ == null) {
          session_ = null;
          onChanged();
        } else {
          session_ = null;
          sessionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public coprocess.CoprocessSessionState.SessionState.Builder getSessionBuilder() {
        
        onChanged();
        return getSessionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      public coprocess.CoprocessSessionState.SessionStateOrBuilder getSessionOrBuilder() {
        if (sessionBuilder_ != null) {
          return sessionBuilder_.getMessageOrBuilder();
        } else {
          return session_ == null ?
              coprocess.CoprocessSessionState.SessionState.getDefaultInstance() : session_;
        }
      }
      /**
       * <code>optional .coprocess.SessionState session = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coprocess.CoprocessSessionState.SessionState, coprocess.CoprocessSessionState.SessionState.Builder, coprocess.CoprocessSessionState.SessionStateOrBuilder> 
          getSessionFieldBuilder() {
        if (sessionBuilder_ == null) {
          sessionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coprocess.CoprocessSessionState.SessionState, coprocess.CoprocessSessionState.SessionState.Builder, coprocess.CoprocessSessionState.SessionStateOrBuilder>(
                  getSession(),
                  getParentForChildren(),
                  isClean());
          session_ = null;
        }
        return sessionBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetadata() {
        onChanged();;
        if (metadata_ == null) {
          metadata_ = com.google.protobuf.MapField.newMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        if (!metadata_.isMutable()) {
          metadata_ = metadata_.copy();
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetadata() {
        getMutableMetadata().clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public Builder removeMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableMetadata().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetadata() {
        return internalGetMutableMetadata().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */
      public Builder putMetadata(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableMetadata().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 5;</code>
       */

      public Builder putAllMetadata(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableMetadata().putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> spec_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetSpec() {
        if (spec_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SpecDefaultEntryHolder.defaultEntry);
        }
        return spec_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableSpec() {
        onChanged();;
        if (spec_ == null) {
          spec_ = com.google.protobuf.MapField.newMapField(
              SpecDefaultEntryHolder.defaultEntry);
        }
        if (!spec_.isMutable()) {
          spec_ = spec_.copy();
        }
        return spec_;
      }

      public int getSpecCount() {
        return internalGetSpec().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public boolean containsSpec(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetSpec().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSpecMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getSpec() {
        return getSpecMap();
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getSpecMap() {
        return internalGetSpec().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public java.lang.String getSpecOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSpec().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public java.lang.String getSpecOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSpec().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSpec() {
        getMutableSpec().clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public Builder removeSpec(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        getMutableSpec().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableSpec() {
        return internalGetMutableSpec().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */
      public Builder putSpec(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutableSpec().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; spec = 6;</code>
       */

      public Builder putAllSpec(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableSpec().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:coprocess.Object)
    }

    // @@protoc_insertion_point(class_scope:coprocess.Object)
    private static final coprocess.CoprocessObject.Object DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coprocess.CoprocessObject.Object();
    }

    public static coprocess.CoprocessObject.Object getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Object>
        PARSER = new com.google.protobuf.AbstractParser<Object>() {
      public Object parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Object(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Object> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Object> getParserForType() {
      return PARSER;
    }

    public coprocess.CoprocessObject.Object getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:coprocess.Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string payload = 1;</code>
     */
    java.lang.String getPayload();
    /**
     * <code>optional string payload = 1;</code>
     */
    com.google.protobuf.ByteString
        getPayloadBytes();
  }
  /**
   * Protobuf type {@code coprocess.Event}
   */
  public  static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:coprocess.Event)
      EventOrBuilder {
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      payload_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              payload_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coprocess.CoprocessObject.internal_static_coprocess_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coprocess.CoprocessObject.internal_static_coprocess_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coprocess.CoprocessObject.Event.class, coprocess.CoprocessObject.Event.Builder.class);
    }

    public static final int PAYLOAD_FIELD_NUMBER = 1;
    private volatile java.lang.Object payload_;
    /**
     * <code>optional string payload = 1;</code>
     */
    public java.lang.String getPayload() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        payload_ = s;
        return s;
      }
    }
    /**
     * <code>optional string payload = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPayloadBytes() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        payload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPayloadBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, payload_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPayloadBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, payload_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coprocess.CoprocessObject.Event)) {
        return super.equals(obj);
      }
      coprocess.CoprocessObject.Event other = (coprocess.CoprocessObject.Event) obj;

      boolean result = true;
      result = result && getPayload()
          .equals(other.getPayload());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coprocess.CoprocessObject.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coprocess.CoprocessObject.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coprocess.Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:coprocess.Event)
        coprocess.CoprocessObject.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coprocess.CoprocessObject.internal_static_coprocess_Event_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coprocess.CoprocessObject.internal_static_coprocess_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coprocess.CoprocessObject.Event.class, coprocess.CoprocessObject.Event.Builder.class);
      }

      // Construct using coprocess.CoprocessObject.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        payload_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coprocess.CoprocessObject.internal_static_coprocess_Event_descriptor;
      }

      public coprocess.CoprocessObject.Event getDefaultInstanceForType() {
        return coprocess.CoprocessObject.Event.getDefaultInstance();
      }

      public coprocess.CoprocessObject.Event build() {
        coprocess.CoprocessObject.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coprocess.CoprocessObject.Event buildPartial() {
        coprocess.CoprocessObject.Event result = new coprocess.CoprocessObject.Event(this);
        result.payload_ = payload_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coprocess.CoprocessObject.Event) {
          return mergeFrom((coprocess.CoprocessObject.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coprocess.CoprocessObject.Event other) {
        if (other == coprocess.CoprocessObject.Event.getDefaultInstance()) return this;
        if (!other.getPayload().isEmpty()) {
          payload_ = other.payload_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coprocess.CoprocessObject.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coprocess.CoprocessObject.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object payload_ = "";
      /**
       * <code>optional string payload = 1;</code>
       */
      public java.lang.String getPayload() {
        java.lang.Object ref = payload_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          payload_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string payload = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPayloadBytes() {
        java.lang.Object ref = payload_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          payload_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string payload = 1;</code>
       */
      public Builder setPayload(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string payload = 1;</code>
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      /**
       * <code>optional string payload = 1;</code>
       */
      public Builder setPayloadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        payload_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:coprocess.Event)
    }

    // @@protoc_insertion_point(class_scope:coprocess.Event)
    private static final coprocess.CoprocessObject.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coprocess.CoprocessObject.Event();
    }

    public static coprocess.CoprocessObject.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    public coprocess.CoprocessObject.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:coprocess.EventReply)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code coprocess.EventReply}
   */
  public  static final class EventReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:coprocess.EventReply)
      EventReplyOrBuilder {
    // Use EventReply.newBuilder() to construct.
    private EventReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventReply() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private EventReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coprocess.CoprocessObject.internal_static_coprocess_EventReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coprocess.CoprocessObject.internal_static_coprocess_EventReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coprocess.CoprocessObject.EventReply.class, coprocess.CoprocessObject.EventReply.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coprocess.CoprocessObject.EventReply)) {
        return super.equals(obj);
      }
      coprocess.CoprocessObject.EventReply other = (coprocess.CoprocessObject.EventReply) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coprocess.CoprocessObject.EventReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.EventReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.EventReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coprocess.CoprocessObject.EventReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coprocess.CoprocessObject.EventReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coprocess.EventReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:coprocess.EventReply)
        coprocess.CoprocessObject.EventReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coprocess.CoprocessObject.internal_static_coprocess_EventReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coprocess.CoprocessObject.internal_static_coprocess_EventReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coprocess.CoprocessObject.EventReply.class, coprocess.CoprocessObject.EventReply.Builder.class);
      }

      // Construct using coprocess.CoprocessObject.EventReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coprocess.CoprocessObject.internal_static_coprocess_EventReply_descriptor;
      }

      public coprocess.CoprocessObject.EventReply getDefaultInstanceForType() {
        return coprocess.CoprocessObject.EventReply.getDefaultInstance();
      }

      public coprocess.CoprocessObject.EventReply build() {
        coprocess.CoprocessObject.EventReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coprocess.CoprocessObject.EventReply buildPartial() {
        coprocess.CoprocessObject.EventReply result = new coprocess.CoprocessObject.EventReply(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coprocess.CoprocessObject.EventReply) {
          return mergeFrom((coprocess.CoprocessObject.EventReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coprocess.CoprocessObject.EventReply other) {
        if (other == coprocess.CoprocessObject.EventReply.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coprocess.CoprocessObject.EventReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coprocess.CoprocessObject.EventReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:coprocess.EventReply)
    }

    // @@protoc_insertion_point(class_scope:coprocess.EventReply)
    private static final coprocess.CoprocessObject.EventReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coprocess.CoprocessObject.EventReply();
    }

    public static coprocess.CoprocessObject.EventReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventReply>
        PARSER = new com.google.protobuf.AbstractParser<EventReply>() {
      public EventReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EventReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventReply> getParserForType() {
      return PARSER;
    }

    public coprocess.CoprocessObject.EventReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coprocess_Object_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coprocess_Object_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coprocess_Object_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coprocess_Object_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coprocess_Object_SpecEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coprocess_Object_SpecEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coprocess_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coprocess_Event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_coprocess_EventReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_coprocess_EventReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026coprocess_object.proto\022\tcoprocess\032#cop" +
      "rocess_mini_request_object.proto\032\035coproc" +
      "ess_session_state.proto\032\026coprocess_commo" +
      "n.proto\"\330\002\n\006Object\022&\n\thook_type\030\001 \001(\0162\023." +
      "coprocess.HookType\022\021\n\thook_name\030\002 \001(\t\022-\n" +
      "\007request\030\003 \001(\0132\034.coprocess.MiniRequestOb" +
      "ject\022(\n\007session\030\004 \001(\0132\027.coprocess.Sessio" +
      "nState\0221\n\010metadata\030\005 \003(\0132\037.coprocess.Obj" +
      "ect.MetadataEntry\022)\n\004spec\030\006 \003(\0132\033.coproc" +
      "ess.Object.SpecEntry\032/\n\rMetadataEntry\022\013\n",
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032+\n\tSpecEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\030\n\005Ev" +
      "ent\022\017\n\007payload\030\001 \001(\t\"\014\n\nEventReply2|\n\nDi" +
      "spatcher\0222\n\010Dispatch\022\021.coprocess.Object\032" +
      "\021.coprocess.Object\"\000\022:\n\rDispatchEvent\022\020." +
      "coprocess.Event\032\025.coprocess.EventReply\"\000" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          coprocess.CoprocessMiniRequestObject.getDescriptor(),
          coprocess.CoprocessSessionState.getDescriptor(),
          coprocess.CoprocessCommon.getDescriptor(),
        }, assigner);
    internal_static_coprocess_Object_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_coprocess_Object_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coprocess_Object_descriptor,
        new java.lang.String[] { "HookType", "HookName", "Request", "Session", "Metadata", "Spec", });
    internal_static_coprocess_Object_MetadataEntry_descriptor =
      internal_static_coprocess_Object_descriptor.getNestedTypes().get(0);
    internal_static_coprocess_Object_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coprocess_Object_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_coprocess_Object_SpecEntry_descriptor =
      internal_static_coprocess_Object_descriptor.getNestedTypes().get(1);
    internal_static_coprocess_Object_SpecEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coprocess_Object_SpecEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_coprocess_Event_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_coprocess_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coprocess_Event_descriptor,
        new java.lang.String[] { "Payload", });
    internal_static_coprocess_EventReply_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_coprocess_EventReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_coprocess_EventReply_descriptor,
        new java.lang.String[] { });
    coprocess.CoprocessMiniRequestObject.getDescriptor();
    coprocess.CoprocessSessionState.getDescriptor();
    coprocess.CoprocessCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

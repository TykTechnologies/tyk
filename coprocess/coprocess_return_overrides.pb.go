// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coprocess_return_overrides.proto

package coprocess

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReturnOverrides struct {
	ResponseCode  int32             `protobuf:"varint,1,opt,name=response_code,json=responseCode" json:"response_code,omitempty"`
	ResponseError string            `protobuf:"bytes,2,opt,name=response_error,json=responseError" json:"response_error,omitempty"`
	Headers       map[string]string `protobuf:"bytes,3,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ReturnOverrides) Reset()                    { *m = ReturnOverrides{} }
func (m *ReturnOverrides) String() string            { return proto.CompactTextString(m) }
func (*ReturnOverrides) ProtoMessage()               {}
func (*ReturnOverrides) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ReturnOverrides) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *ReturnOverrides) GetResponseError() string {
	if m != nil {
		return m.ResponseError
	}
	return ""
}

func (m *ReturnOverrides) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func init() {
	proto.RegisterType((*ReturnOverrides)(nil), "coprocess.ReturnOverrides")
}

func init() { proto.RegisterFile("coprocess_return_overrides.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xce, 0x2f, 0x28,
	0xca, 0x4f, 0x4e, 0x2d, 0x2e, 0x8e, 0x2f, 0x4a, 0x2d, 0x29, 0x2d, 0xca, 0x8b, 0xcf, 0x2f, 0x4b,
	0x2d, 0x2a, 0xca, 0x4c, 0x49, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0xab,
	0x50, 0xba, 0xc3, 0xc8, 0xc5, 0x1f, 0x04, 0x56, 0xe5, 0x0f, 0x53, 0x24, 0xa4, 0xcc, 0xc5, 0x5b,
	0x94, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x1a, 0x9f, 0x9c, 0x9f, 0x92, 0x2a, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x1a, 0xc4, 0x03, 0x13, 0x74, 0xce, 0x4f, 0x49, 0x15, 0x52, 0xe5, 0xe2, 0x83, 0x2b,
	0x4a, 0x2d, 0x2a, 0xca, 0x2f, 0x92, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x6b, 0x75, 0x05,
	0x09, 0x0a, 0x39, 0x72, 0xb1, 0x67, 0xa4, 0x26, 0xa6, 0xa4, 0x16, 0x15, 0x4b, 0x30, 0x2b, 0x30,
	0x6b, 0x70, 0x1b, 0xa9, 0xeb, 0xc1, 0x2d, 0xd7, 0x43, 0xb3, 0x58, 0xcf, 0x03, 0xa2, 0xd2, 0x35,
	0xaf, 0xa4, 0xa8, 0x32, 0x08, 0xa6, 0x4f, 0xca, 0x8a, 0x8b, 0x07, 0x59, 0x42, 0x48, 0x80, 0x8b,
	0x39, 0x3b, 0xb5, 0x12, 0xec, 0x28, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31,
	0xa7, 0x34, 0x15, 0xea, 0x04, 0x08, 0xc7, 0x8a, 0xc9, 0x82, 0x31, 0x89, 0x0d, 0xec, 0x61, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x37, 0xa0, 0x22, 0x14, 0x01, 0x00, 0x00,
}

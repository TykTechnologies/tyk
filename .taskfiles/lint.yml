---
version: "3"

vars:
  root:
    sh: git rev-parse --show-toplevel
  BASE_BRANCH:
    sh: echo "${BASE_BRANCH:-master}"

tasks:
  tidy:
    desc: "Run go mod tidy with caching"
    sources:
      - go.mod
      - go.sum
    generates:
      - .task-tidy-cache
    cmds:
      - go mod tidy
      - touch .task-tidy-cache

  run:
    desc: "Run linters (golangci-lint handles fmt and vet)"
    cmds:
      - task: tidy
      - task: check
      - golangci-lint run --new-from-rev=origin/{{ .BASE_BRANCH }} --issues-exit-code=1 --fix ./...

  basic:
    desc: "Run basic checks without golangci-lint"
    cmds:
      - task: tidy
      - task: check

  fmt:
    desc: "Run typical code cleanup steps"
    cmds:
      - go fmt ./...
      - task: tidy

  vet:
    desc: "Run go vet"
    dir: '{{.root}}'
    cmds:
      - go vet ./...

  # this has manual use
  golangci-lint:
    desc: "Run golangci-lint for json summaries"
    cmds:
      - golangci-lint run --out-format json ./... | summary golangcilint > golangci-lint.json
      - golangci-lint run --out-format json --config .golangci.dev.yml ./... | summary golangcilint > golangci-lint-dev.json

  golangci-lint:fix:
    desc: "Run golangci-lint w fixing"
    cmds:
      - golangci-lint run --config .golangci.dev.yml --fix ./...

  golangci-lint:diff:
    desc: "Print changes from dev -> CI"
    cmds:
      - dyff between -i .golangci.dev.yml .golangci.yml

  build:
    desc: "Run go build for sanity check"
    dir: '{{.root}}'
    cmds:
      - go build .

  build-test:
    desc: "Compile go tests for sanity check"
    dir: '{{.root}}'
    cmds:
      - cd gateway && go test -c .

  check:
    desc: "Run repository specific checks"
    cmds:
      - task: check:x-tyk-gateway
      - task: check:imports
      - task: check:config

  check:imports:
    desc: "go-fsck lint import paths"
    dir: '{{.root}}'
    sources:
      - '**/*.go'
      - '.go-fsck.yml'
    generates:
      - .task-check-imports-cache
    cmds:
      - go-fsck lint
      - touch .task-check-imports-cache

  check:config:
    internal: true
    desc: "lint config schema"
    dir: '{{.root}}'
    sources:
      - 'cli/linter/**/*.go'
      - 'config/**/*.go'
    generates:
      - .task-check-config-cache
    cmds:
      - |
        changed=$(git diff --name-only origin/{{.BASE_BRANCH}}...HEAD 2>/dev/null | grep -E "^(cli/linter|config)/" || true)
        if [ -z "$changed" ]; then
          echo "✓ No config files changed vs origin/{{.BASE_BRANCH}} - skipping config check"
          touch .task-check-config-cache
          exit 0
        fi
        echo "Config files changed, running check..."
        go test -count 1 ./cli/linter/...
        touch .task-check-config-cache

  check:x-tyk-gateway:
    desc: "Lint x-tyk-gateway schema"
    dir: '{{.root}}'
    sources:
      - 'apidef/oas/**/*.go'
    generates:
      - .task-check-x-tyk-gateway-cache
    cmds:
      - |
        changed=$(git diff --name-only origin/{{.BASE_BRANCH}}...HEAD 2>/dev/null | grep -E "^apidef/oas/" || true)
        if [ -z "$changed" ]; then
          echo "✓ No apidef/oas files changed vs origin/{{.BASE_BRANCH}} - skipping x-tyk-gateway check"
          touch .task-check-x-tyk-gateway-cache
          exit 0
        fi
        echo "OAS schema files changed, running check..."
        go test -count 1 -run=TestXTykGateway_Lint ./apidef/oas/
        touch .task-check-x-tyk-gateway-cache

  check-git-state:
    desc: "Check if git working tree is clean using git status --porcelain"
    dir: '{{.root}}'
    vars:
      message: '{{.MESSAGE | default "task made git state dirty, please run task locally and update PR"}}'
    cmds:
      - |
        if [ -n "$(git status --porcelain)" ]; then
          echo "{{.message}}"
          echo
          git status --short
          git diff
          exit 1
        fi


---
version: "3"

vars:
  auto_folder: ci/auto

tasks:
  login:
    desc: Logins into AWS ECR registry to allow pull required images from it
    cmds:
      - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 754489498669.dkr.ecr.eu-central-1.amazonaws.com

  bootstrap:
    desc: Bootstraps dashboard with an organization and user
    dir: '{{.auto_folder}}'
    cmds:
      - sleep 8
      - ./dash-bootstrap.sh http://localhost:3000
      - sleep 8

  local:
    desc: Deploys infrastructure locally using docker compose manifest
    dir: '{{.auto_folder}}'
    env:
      DB: '{{ or .DB "mongo44" }}'
      confs_dir: '{{ or .confs_dir "./pro" }}'
      env_file: local-{{.DB}}.env
    cmds:
      - docker compose -f pro.yml -f deps.yml -f ${DB}.yml --env-file master.env up --quiet-pull -d

  clean:
    desc: Tears down all local infrastructure including networking
    dir: '{{.auto_folder}}'
    env:
      DB: '{{ or .DB "mongo44" }}'
      confs_dir: '{{ or .confs_dir "./pro" }}'
      env_file: local-{{.DB}}.env
    cmds:
      - docker compose -f pro.yml -f deps.yml -f ${DB}.yml --env-file master.env down


  local-ha:
    desc: Deploys infrastructure locally using docker compose manifest
    dir: '{{.auto_folder}}'
    env:
      DB: '{{ or .DB "mongo44" }}'
      confs_dir: '{{ or .confs_dir "./pro-ha" }}'
      env_file: local-{{.DB}}.env
    cmds:
      - docker compose -f pro-ha.yml -f deps_pro-ha.yml -f ${DB}.yml --env-file master.env --profile master-datacenter up --quiet-pull -d
      - task: bootstrap
      - docker compose -f pro-ha.yml -f deps_pro-ha.yml -f ${DB}.yml --env-file master.env --profile slave-datacenter up --quiet-pull -d

  clean-ha:
    desc: Tears down all local infrastructure including networking
    dir: '{{.auto_folder}}'
    env:
      DB: '{{ or .DB "mongo44" }}'
      confs_dir: '{{ or .confs_dir "./pro-ha" }}'
      env_file: local-{{.DB}}.env
    cmds:
      - docker compose -f pro-ha.yml -f deps_pro-ha.yml -f ${DB}.yml --env-file master.env --profile all down


  pytest:
    desc: |
      Deploys pytest container that runs against local infrastructure using docker compose manifest
      - For mdcb you may want to use the ARGS "--ci -m "mdcb""
      - For non mdcb deployments something like "-m "not local and not mdcb""
    dir: '{{.auto_folder}}'
    cmds: 
      - |
        docker run --rm --network auto_default \
        754489498669.dkr.ecr.eu-central-1.amazonaws.com/tyk-automated-tests:master \
        pytest -c pytest_ci.ini {{.CLI_ARGS}}

  healthcheck:
    desc: Usefull healthchecks to ensure services are up and running
    cmds:
      - echo "---Gateway Status---"
      - curl -s --fail -k https://"{{.HOST}}":8080/hello
    vars:
      HOST: localhost
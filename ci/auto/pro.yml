version: "3.9"
services:
  tyk:
    profiles: ["all", "master-datacenter"]
    container_name: tyk
    image: ${tyk_image}
    env_file:
      - ${env_file}
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "6000:6000"
      - "8003:8003"
      - "8080:8080"
    entrypoint: ["/bin/bash"]
    command:
      - "-c"
      - |
        update-ca-certificates
        /opt/tyk-gateway/tyk --conf /conf/tyk.conf

  tyk-analytics:
    profiles: ["all", "master-datacenter"]
    container_name: tyk-analytics
    image: ${tyk_analytics_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_DB_LICENSEKEY=${TYK_DB_LICENSEKEY}
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "3000:3000"
      - "5000:5000"
      - "1026:1025"
    command: [ "--conf", "/conf/tyk-analytics.conf" ]
    restart: on-failure

  tyk-pump:
    profiles: ["all", "master-datacenter"]
    container_name: tyk-pump
    image: ${tyk_pump_image}
    env_file:
      - ${env_file}      
    volumes:
      - ${confs_dir}:/conf/
    ports:    
      - "8061:8061"
    command: [ "--conf", "/conf/tyk-pump.conf" ]

  tyk-sink:
    profiles: ["all", "master-datacenter"]
    container_name: tyk-sink
    image: ${tyk_sink_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_MDCB_LICENSE=${TYK_MDCB_LICENSE}
    volumes:
      - ${confs_dir}:/conf/
    ports:
    - "9090:9090"
    entrypoint: ["/opt/tyk-sink/tyk-sink", "--conf", "/conf/tyk-sink.conf"]
    
  tyk-gateway-datacenter-1-alfa:
    profiles: ["all", "slave-datacenter"]
    container_name: tyk-gateway-datacenter-1-alfa
    image: ${tyk_alfa_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_GW_LISTENPORT=8181
      - TYK_GW_DBAPPCONFOPTIONS_TAGS=alfa
      - TYK_GW_STORAGE_HOST=redis-datacenter-1
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "8181:8181"
    entrypoint: ["/opt/tyk-gateway/tyk", "--conf", "/conf/tyk-datacenter-1.conf"]

  tyk-gateway-datacenter-1-beta:
    profiles: ["all", "slave-datacenter"]
    container_name: tyk-gateway-datacenter-1-beta
    image: ${tyk_beta_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_GW_LISTENPORT=8182
      - TYK_GW_DBAPPCONFOPTIONS_TAGS=beta
      - TYK_GW_STORAGE_HOST=redis-datacenter-1
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "8182:8182"
    entrypoint: ["/opt/tyk-gateway/tyk", "--conf", "/conf/tyk-datacenter-1.conf"]

  tyk-gateway-datacenter-2-alfa:
    profiles: ["all", "slave-datacenter"]
    container_name: tyk-gateway-datacenter-2-alfa
    image: ${tyk_alfa_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_GW_LISTENPORT=8281
      - TYK_GW_DBAPPCONFOPTIONS_TAGS=alfa
      - TYK_GW_STORAGE_HOST=redis-datacenter-2
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "8281:8281"
    entrypoint: ["/opt/tyk-gateway/tyk", "--conf", "/conf/tyk-datacenter-2.conf"]

  tyk-gateway-datacenter-2-beta:
    profiles: ["all", "slave-datacenter"]
    container_name: tyk-gateway-datacenter-2-beta
    image: ${tyk_beta_image}
    env_file:
      - ${env_file}
    environment:
      - TYK_GW_LISTENPORT=8282
      - TYK_GW_DBAPPCONFOPTIONS_TAGS=beta
      - TYK_GW_STORAGE_HOST=redis-datacenter-2
    volumes:
      - ./certs:/usr/local/share/ca-certificates
      - ${confs_dir}:/conf/
    ports:
      - "8282:8282"
    entrypoint: ["/opt/tyk-gateway/tyk", "--conf", "/conf/tyk-datacenter-2.conf"]

  gateway-checker:
    image: curlimages/curl
    command: tail -f /dev/null
    depends_on:
      - tyk
    healthcheck:
      test: curl -s -k --fail https://tyk:8080/hello | grep -o '.*status":"pass".*dashboard":{"status":"pass".*redis":{"status":"pass"'
      interval: 5s
      retries: 10
      start_period: 4s
      timeout: 10s

  dashboard-checker:
    image: curlimages/curl
    command: tail -f /dev/null
    depends_on:
      - tyk-analytics
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://tyk-analytics:3000/hello/ | grep -q '^200$'"]
      interval: 10s
      retries: 30
      start_period: 10s
      timeout: 10s

  wait:
    image: hello-world:linux
    depends_on:
        gateway-checker:
            condition: service_healthy
        dashboard-checker:
            condition: service_healthy 

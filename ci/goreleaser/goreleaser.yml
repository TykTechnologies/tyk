# Generated by: gromit policy

# Check the documentation at http://goreleaser.com
# This project needs CGO_ENABLED=1 and the cross-compiler toolchains for
# - arm64
# - amd64
version: 2
builds:
  - id: std-amd64
    flags:
      - -tags=goplugin
      - -trimpath
    env:
      - NOP=nop # ignore this, it is jsut to avoid a complex conditional in the templates
      - CC=gcc
    ldflags:
      - -X github.com/TykTechnologies/tyk/internal/build.Version={{.Version}}
      - -X github.com/TykTechnologies/tyk/internal/build.Commit={{.FullCommit}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuildDate={{.Date}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuiltBy=goreleaser
    goos:
      - linux
    goarch:
      - amd64
    binary: tyk
  - id: std-arm64
    flags:
      - -tags=goplugin
      - -trimpath
    env:
      - NOP=nop # ignore this, it is jsut to avoid a complex conditional in the templates
      - CC=aarch64-linux-gnu-gcc
    ldflags:
      - -X github.com/TykTechnologies/tyk/internal/build.Version={{.Version}}
      - -X github.com/TykTechnologies/tyk/internal/build.Commit={{.FullCommit}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuildDate={{.Date}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuiltBy=goreleaser
    goos:
      - linux
    goarch:
      - arm64
    binary: tyk
  - id: std-s390x
    flags:
      - -tags=goplugin
      - -trimpath
    env:
      - NOP=nop # ignore this, it is jsut to avoid a complex conditional in the templates
      - CC=s390x-linux-gnu-gcc
    ldflags:
      - -X github.com/TykTechnologies/tyk/internal/build.Version={{.Version}}
      - -X github.com/TykTechnologies/tyk/internal/build.Commit={{.FullCommit}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuildDate={{.Date}}
      - -X github.com/TykTechnologies/tyk/internal/build.BuiltBy=goreleaser
    goos:
      - linux
    goarch:
      - s390x
    binary: tyk
nfpms:
  - id: std
    vendor: "Tyk Technologies Ltd"
    homepage: "https://tyk.io"
    maintainer: "Tyk <info@tyk.io>"
    description: Tyk Open Source API Gateway written in Go, supporting REST, GraphQL, TCP and gRPC protocols
    package_name: tyk-gateway
    file_name_template: "{{ .ConventionalFileName }}"
    ids:
      - std-amd64
      - std-arm64
      - std-s390x
    formats:
      - deb
      - rpm
    contents:
      - src: "README.md"
        dst: "/opt/share/docs/tyk-gateway/README.md"
      - src: "ci/install/*"
        dst: "/opt/tyk-gateway/install"
      - src: ci/install/inits/systemd/system/tyk-gateway.service
        dst: /lib/systemd/system/tyk-gateway.service
      - src: ci/install/inits/sysv/init.d/tyk-gateway
        dst: /etc/init.d/tyk-gateway
      - src: /opt/tyk-gateway
        dst: /opt/tyk
        type: "symlink"
      - src: "LICENSE.md"
        dst: "/opt/share/docs/tyk-gateway/LICENSE.md"
      - src: "apps/app_sample.*"
        dst: "/opt/tyk-gateway/apps"
      - src: "templates/*.json"
        dst: "/opt/tyk-gateway/templates"
      - src: "templates/playground/*"
        dst: "/opt/tyk-gateway/templates/playground"
      - src: "middleware/*.js"
        dst: "/opt/tyk-gateway/middleware"
      - src: "event_handlers/sample/*.js"
        dst: "/opt/tyk-gateway/event_handlers/sample"
      - src: "policies/*.json"
        dst: "/opt/tyk-gateway/policies"
      - src: "coprocess/*"
        dst: "/opt/tyk-gateway/coprocess"
      - src: tyk.conf.example
        dst: /opt/tyk-gateway/tyk.conf
        type: "config|noreplace"
    scripts:
      preinstall: "ci/install/before_install.sh"
      postinstall: "ci/install/post_install.sh"
      postremove: "ci/install/post_remove.sh"
    bindir: "/opt/tyk-gateway"
    rpm:
      scripts:
        posttrans: ci/install/post_trans.sh
      signature:
        key_file: tyk.io.signing.key
    deb:
      signature:
        key_file: tyk.io.signing.key
        type: origin
publishers:
  - name: std
    ids:
      - std
    env:
      - PACKAGECLOUD_TOKEN={{ .Env.PACKAGECLOUD_TOKEN }}
    cmd: packagecloud publish --debvers "{{ .Env.DEBVERS }}" --rpmvers "{{ .Env.RPMVERS }}" tyk/tyk-gateway-unstable {{ .ArtifactPath }}
dockers:
  # Build tykio/tyk-gateway std (amd64)
  - ids:
      - std-amd64
    image_templates:
      - "tykio/tyk-gateway:{{.Tag}}-std-amd64"
    build_flag_templates:
      - "--build-arg=PORTS=8080"
      - "--build-arg=BUILD_PACKAGE_NAME=tyk-gateway"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    use: buildx
    goarch: amd64
    goos: linux
    dockerfile: ci/Dockerfile.std
    extra_files:
      - "ci/install/"
      - "README.md"
      - "dist/"
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"
  # Build tykio/tyk-gateway std (arm64)
  - ids:
      - std-arm64
    image_templates:
      - "tykio/tyk-gateway:{{.Tag}}-std-arm64"
    build_flag_templates:
      - "--build-arg=PORTS=8080"
      - "--build-arg=BUILD_PACKAGE_NAME=tyk-gateway"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    use: buildx
    goarch: arm64
    goos: linux
    dockerfile: ci/Dockerfile.std
    extra_files:
      - "ci/install/"
      - "README.md"
      - "dist/"
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"
  # Build tykio/tyk-gateway std (s390x)
  - ids:
      - std-s390x
    image_templates:
      - "tykio/tyk-gateway:{{.Tag}}-std-s390x"
    build_flag_templates:
      - "--build-arg=PORTS=8080"
      - "--build-arg=BUILD_PACKAGE_NAME=tyk-gateway"
      - "--platform=linux/s390x"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    use: buildx
    goarch: s390x
    goos: linux
    dockerfile: ci/Dockerfile.std
    extra_files:
      - "ci/install/"
      - "README.md"
      - "dist/"
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"
docker_manifests:
  # Multi-arch manifest for tykio/tyk-gateway std
  - name_template: tykio/tyk-gateway:{{ .Tag }}
    image_templates:
      - tykio/tyk-gateway:{{ .Tag }}-std-amd64
      - tykio/tyk-gateway:{{ .Tag }}-std-arm64
      - tykio/tyk-gateway:{{ .Tag }}-std-s390x
  - name_template: tykio/tyk-gateway:v{{ .Major }}.{{ .Minor }}{{.Prerelease}}
    image_templates:
      - tykio/tyk-gateway:{{ .Tag }}-std-amd64
      - tykio/tyk-gateway:{{ .Tag }}-std-arm64
      - tykio/tyk-gateway:{{ .Tag }}-std-s390x
  - name_template: tykio/tyk-gateway:v{{ .Major }}{{.Prerelease}}
    image_templates:
      - tykio/tyk-gateway:{{ .Tag }}-std-amd64
      - tykio/tyk-gateway:{{ .Tag }}-std-arm64
      - tykio/tyk-gateway:{{ .Tag }}-std-s390x
# This disables archives
archives:
  - formats: ['binary']
    allow_different_binary_count: true
checksum:
  disable: true
release:
  disable: true
  github:
    owner: TykTechnologies
    name: tyk
  prerelease: auto
  draft: true
  name_template: "{{.ProjectName}}-v{{.Version}}"

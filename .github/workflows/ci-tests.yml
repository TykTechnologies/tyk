name: CI tests

on: pull_request

env:
  TYK_DB_REDISHOST: localhost
  TYK_GW_STORAGE_HOST: localhost

jobs:
  test:
    name: Go ${{ matrix.go }} Redis ${{ matrix.redis-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        redis-version: [5]
        go: [1.15]

    steps:
      - name: Checkout Tyk
        uses: actions/checkout@v2

      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
            python-version: '3.5'

      - name: Install Dependencies and basic hygiene test
        id: hygiene
        run: |
          sudo apt-get install libluajit-5.1-dev
          GO111MODULE=off go get golang.org/x/tools/cmd/goimports
          gofmt -l . 2>&1 | tee fmt.log
          fmt_code=${PIPESTATUS[0]}
          echo "::set-output name=fmt::$(sed -ze 's/%/%25/g;s/\n/%0A/g' fmt.log)"
          goimports -l . 2>&1 | tee imports.log
          imports_code=${PIPESTATUS[0]}
          echo "::set-output name=imports::$(sed -ze 's/%/%25/g;s/\n/%0A/g' imports.log)"
          [[ $fmt_code -ne 0 || $imports_code -ne 0 ]] && exit 1
          
          python -m pip install --upgrade pip
          pip install setuptools
          pip install google
          pip install protobuf

      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Gateway Tests
        id: ci-tests
        run: |
          ./bin/ci-tests.sh 2>&1 | tee test.log
          result_code=${PIPESTATUS[0]}
          echo "::set-output name=log::$(sed -ze 's/%/%25/g;s/\n/%0A/g' test.log)"
          exit $result_code

      - name: Notify status
        if: ${{ failure() && github.event.pull_request.number }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            # :boom: CI tests failed :see_no_evil:
            ## CI test log
            ```shellsession
            ${{ steps.ci-tests.outputs.log || 'all ok' }}
            ```
            ## gofmt
            ${{ steps.hygiene.outputs.fmt || 'all ok' }}
            ## goimports
            ${{ steps.hygiene.outputs.imports || 'all ok' }}

            If the above are ok, please look at [the run](https://github.com/TykTechnologies/tyk/pull/${{ github.event.pull_request.number }}/checks?check_run_id=${{ github.run_id }}) or in the _Checks_ tab.

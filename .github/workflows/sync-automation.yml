# Generated by: gromit policy
# Generated on: Wed May 10 11:41:30 UTC 2023

name: Sync automation

on:
  push:
    branches:
      - master
    paths:
      - ci/**
      - .github/workflows/release.yml
      - .github/dependabot.yml
      - .github/workflows/api-tests.yml

jobs:
  sync:
    runs-on: ubuntu-latest
    container: tykio/gromit:v1.5

    strategy:
      fail-fast: false
      matrix:
        branch:
          - release-4-lts
          - release-5.0.2
          - release-5-lts

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{matrix.branch}}
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: sync ${{matrix.branch}} from master
        id: sync-changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --local user.email "policy@gromit"
          git config --local user.name "Bender"
          git fetch origin ${{ matrix.branch }}
          git fetch origin master:master
          prbranch=sync/auto/${{ matrix.branch }}/${{ github.run_id }}
          git checkout -b $prbranch
          rm -rf ci
          git restore --source master -- ci
          rm -f .github/workflows/release.yml
          git restore --source master -- .github/workflows/release.yml
          rm -f .github/dependabot.yml
          git restore --source master -- .github/dependabot.yml
          rm -f .github/workflows/api-tests.yml
          git restore --source master -- .github/workflows/api-tests.yml
          git add -A
          echo "prbranch=$prbranch" >> $GITHUB_OUTPUT
          echo "::debug::Commit ${{ github.sha }} syncd for ${{matrix.branch}}"
          echo "::debug::Generate releng bundle using latest gromit templates for ${{matrix.branch}}"
          # get the tarball for the latest gromit master - it will have the latest version of
          # the templates.
          mkdir /tmp/gromit-src && gh api -H "Accept: application/vnd.github+json" /repos/TykTechnologies/gromit/tarball/master | tar --strip-components 1 -C /tmp/gromit-src -xzf -
          gromit bundle gen --branch ${{ matrix.branch }} --bundle /tmp/gromit-src/policy/templates/releng  --repo tyk .
          git add -A && git commit -m "[CI]: Syncing ${{ matrix.branch }}"
          gromit git push . tyk $prbranch --branch $prbranch
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_GH_TOKEN }}
          # Needed for gh CLI
          GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}

      - name: Create PR from the branch.
        id: create-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ORG_GH_TOKEN }}
          result-encoding: string
          script: |
            const msg = ${{ toJSON(github.event.head_commit.message) }};
            const title = `[CI] Sync ${context.repo.repo}:${{ matrix.branch }} ` + msg.split("\n")[0];
            const response = await github.rest.pulls.create({
              title: title,
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: '${{ steps.sync-changes.outputs.prbranch }}',
              base: '${{ matrix.branch }}',
              body: `PR auto generated by the CI Sync automation.
            Picks the CI changes from the commit ${{ github.sha }} on master.
            Please make any additional changes required before merging.
            ### _Commit message body of the picked commit:_
            ${msg}
            `});
            github.rest.issues.addLabels({
              owner:  context.repo.owner,
              repo: context.repo.repo,
              issue_number: response.data.number,
              labels: ['sync-automation'] });
            return response.data.number


      - name: Enable automerge for the created PR
        id: enable-automerge
        run: |
          gh pr merge $PULL --auto --squash --subject "[CI] Sync automation: Syncing commits from master" --body "Picking CI changes from the commit $COMMIT"
        env:
          GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}
          PULL: ${{ steps.create-pr.outputs.result }}
          COMMIT: ${{ github.sha }}
